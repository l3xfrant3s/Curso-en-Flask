Con respecto a la sección 3, añadimos un archivo requirements.txt, el cual contiene los nombres de los paquetes de Python para ser instalados de una vez cuando usamos el comando pip install -r requirements.txt.

Añadimos un archivo .flaskenv, que contiene variables de entorno para cuando corramos Flask. Aquí, le estamos diciendo que use un archivo llamado app cuando ejecute Flask, y que active el debugger.

Creamos un archivo db.py para guardar la "base de datos", que ahora tendrá una forma distinta, separando las tiendas de sus artículos en dos diccionarios. Así también podemos asignar un identificador único a cada tienda y a cada artículo.

app.py ha sido modificado para que sea más compatible con bases de datos cuando pasemos a usar eso una sección más adelante.



Más adelante hacemos unos añadidos al Dockerfile para que use el archivo requirements.txt y modificamos el comando para crear la imagen a:

docker build -t flask-smorest-api .

y el de crear el contenedor a:

docker run -dp 5005:5000 -w /app -v "$(pwd):/app" flask-smorest-api

-w /app le dice que estamos trabajando en el directorio /app
-v "$(pwd):/app" le dice que cree un volumen que conecte este mismo directorio con la carpeta /app del contenedor.

Crear un volumen nos permite ver los cambios que hemos hecho en los archivos de forma inmediata, sin tener que reiniciar el contenedor.